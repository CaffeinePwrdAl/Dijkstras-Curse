#include <vector>

#include "defs.h"
#include "levels.h"

wchar_t asLogo[][GAME_AREA_X+1] = 
{
	//0123456789012345678901234567890123456789012345678901234567890
	//0         1         2         3         4         5         6
	L"                      Dijkstras Curse                        ",
	L"                                                             ",
	L"                             .;:;.                           ",
	L"                       .   .;:##:;.                          ",
	L"                      .;. .;:####:;.                         ",
	L"                    .;:#:;.;:###::;.                         ",
	L"                      .;. .;:##:;.                           ",
	L"                       .   .;::;.                            ",
	L"                            .;;.                             ",
	L"",
	L"          A game by Alex Walters {@CaffeinePwrdAl}           ",
	L"",
	L"         Copyright (c)  Caffine Powered Games - 2015         ",
};

const Level aui8Levels[] = 
{
	{
		L"T1: In the beginning...",
		L"When you move all your cells replicate in that direction.\n" \
		 "Reach the exit portal.",
		0, 0,
		{
			"B         ",
			"     B    ",
			"  B       ",
			"          ",
			"        B ",
			"          ",
			"          ",
			"          ",
			"       xxx",
			"         e",
			"       xxx",
		},
	},

	{
		L"T2: Yes... Of course it has spikes!",
		L"But they only kill you if you move into them.\n" \
		 "You can survive if you reach the portal at the same time.",
		0, 0,
		{
			"!!!!!!!!!!",
			"B         ",
			"          ",
			"          ",
			"          ",
			"   xxx    ",
			"   x!!    ",
			"          ",
			"          ",
			"          ",
			"!!!!e!!!!!",
		},
	},
	{
		L"T3: Lone road",
		L"Sometimes there is only one path.",
		0, 0,
		{
			"Bxxxxxxxxx",
			" x      xx",
			" x xxxx xx",
			" x xxxx xx",
			" x xxxx xx",
			" x xxxx xx",
			" x xxxx xx",
			" x xxxx xx",
			" x xxxx xx",
			"   xxxx  e",
			"xxxxxxxxxx",
		},
	},
	{
		L"T4: I'll take the high road, and I'll take the low road",
		L"Sometimes you'll explore many paths at the same time.\n" \
		 "  ... There might be bonus goals for covering extra squares.",
		0, 0,
		{
			"Bxxxxxxxxx",
			" x      xx",
			" x xxxx xx",
			" x      xx",
			" x xxxx xx",
			" x      xx",
			" x xxxx xx",
			" x xxxx xx",
" x xxxx xx",
"   xxxx  e",
"xxxxxxxxxx",
		},
	},
	{
		//01234567890123456789012345678901234567890123456789012345678|
		//0         1         2         3         4         5        |
		L"T5: The obvious path...\n",
		L"... is not always the right path.\n" \
		 "Bonus Goal: Cover all the open spaces",
		0, 40,
		{
			"Bxxxxxxxxx",
			" x      xx",
			" x xxxx xx",
			"        xx",
			" x xxxx xx",
			" x  !!  xx",
			" x xxxx xx",
			" x xxxx xx",
			" x xxxx xx",
			"   xxxx  e",
			"xxxxxxxxxx",
		},
	},
	{
		L"Section 1: Ready?",
		L"Now you know what you're doing, it's time to begin!",
		0, 0,
		{
			"xxxxxxxxxx",
			"xxxxxxxxxx",
			"xxxxxxxxxx",
			"xxxxxxxxxx",
			"xxxxxxxxxx",
			"B        e",
			"xxxxxxxxxx",
			"xxxxxxxxxx",
			"xxxxxxxxxx",
			"xxxxxxxxxx",
			"xxxxxxxxxx",
		},
	},
	{
		L"L1: 'The emergency exits are here, here, here...'",
		L"Bonus Goal: Collect 5 Stars",
		5, 0,
		{
			"!!!!!!! e!",
			"!!xxxx! x!",
			"!!  * * x!",
			"!!  x!! x!",
			"!! xxxx  !",
			"!x B  x  !",
			"!   x!  !!",
			"* * xx   !",
			"e!  *   *!",
			"!! *  !  !",
			"!x!! !x!e!",
		},
	},
	{
		L"L2: 'Left Brain/Right Brain'",
		L"Bonus Goal: Cover all the open spaces",
		0, 57,
		{
			"xxxxxxxxxx",
			"    !    e",
			"  xxx  xxx",
			"  Bxx     ",
			" xxxxx xxx",
			"         e",
			"      xxxx",
			"          ",
			"     xx xx",
			"xxxx B  xx",
			"xxxxxxxxxx",
		},
	},
	{
		L"L3: Slot Machine",
		L"Bonus Goal: Cover all the open spaces",
		0, 74,
		{
			"exxxxxxxBx",
			" xx x     ",
			" !     x  ",
			" !  x    x",
			" !    x   ",
			" ! x    x ",
			" !    xx  ",
			" xx x    x",
			"         x",
			"    x    x",
			"      xxxx",
		},
	},
	{
		L"Section 2: Ooooh, push it, push it real good",
		L"Yeah, Ok, I'll stop now.",
		0, 0,
		{
			"xxxxxxxxxx",
			"xxxxxxxxxx",
			"xxxxxxxxxx",
			"xxxxxxxxxx",
			"xxxxxxxxxx",
			"B   M     ",
			"xxxxxxxxex",
			"xxxxxxxxxx",
			"xxxxxxxxxx",
			"xxxxxxxxxx",
			"xxxxxxxxxx",
		},
	},
	{
		L"M1: Like a knife through shark infested custard.",
		L"or is it a custard infested shark through knives?\n" \
		L"                    ... I can never remember.",
		0, 0,
		{	
			"B         ",
			"MMMMMMMMMM",
			"          ",
			"  !    !  ",
			"    !    !",
			"          ",
			"      !   ",
			"          ",
			" !   !   x",
			"   !     e",
			"         x",
		},
	},
	{
		L"M2: To Me, To You.",
		L"",
		0, 0,
		{	
			"Bx        ",
			" x        ",
			" x        ",
			" x       B",
			" x        ",
			" M        ",
			" xxxxxxxxx",
			"          ",
			" xxxxxxxx ",
			"!xxxxxxxx ",
			"xxxxxxxxxe",
		},
	},
	{
		L"M3: The Medusa Cascade",
		L"Bonus Goal: Cover all the open spaces",
		0, 61,
		{
			"Bx        ",
			" MB       ",
			" xxxxxxxx ",
			"       M  ",
			" xxxxxxxx ",
			"!!xx      ",
			"!!   xxxx ",
			"!x x   xx!",
			"xx x     !",
			"BM xxxxx !",
			"BBBxe    !",
		},
	},
	{
		L"M3: 'But they are the gatekeepers'",
		L"They are guarding all the doors, they are holding all the\n"\
		L"keys -- Morpheus.",
		0, 0,
		{
			"xQxxxx  M ",
			"xQxQx xQx ",
			"x x x x x ",
			"xQx xQxQxB",
			"xQxQxQx xx",
			"B  Q Q Q e",
			"xQxQx x xx",
			"x xQx x xx",
			"x x x x xx",
			"x x xxxxxx",
			"xxx xxxxxx",
		},
	},
};
const int numLevels = sizeof(aui8Levels) / sizeof(aui8Levels[0]);

